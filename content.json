{"meta":{"title":"Wizare 的博客","subtitle":null,"description":"命数如织","author":"Wizare","url":"https://wizare.github.io"},"pages":[{"title":"tags","date":"2018-08-18T12:46:49.000Z","updated":"2018-08-18T12:47:29.987Z","comments":false,"path":"tags/index.html","permalink":"https://wizare.github.io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-08-18T12:43:14.000Z","updated":"2018-08-18T12:43:54.796Z","comments":false,"path":"categories/index.html","permalink":"https://wizare.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Incorporating Copying Mechanism in Sequence-to-Sequence Learning","slug":"Incorporating-Copying-Mechanism-in-Sequence-to-Sequence-Learning","date":"2018-08-19T12:26:00.000Z","updated":"2018-08-19T13:01:26.285Z","comments":true,"path":"2018/08/19/Incorporating-Copying-Mechanism-in-Sequence-to-Sequence-Learning/","link":"","permalink":"https://wizare.github.io/2018/08/19/Incorporating-Copying-Mechanism-in-Sequence-to-Sequence-Learning/","excerpt":"","text":"论文原文。 背景和动机 一些词语片段会在一些语言任务（对话、文本摘要）中重复出现 人类对话中会有重复说词语片段的现象，即使自己不理解其语义。人类的本质是复读机 Copy Mechanism (复制机制）定义：定位到输入序列中的某个片段，然后将该片段拷贝到输出序列中。 作用： 现象中提到的复制需要绝对的精确性，而如果全部输出都是靠模型生成的话，精确度不够。而直接复制的话保证了信息的完整性。 模型提出名为 copynet 的模型，主体为seq2seq模型中的encoder-decoder结构。 Encoder:双向rnn结构，输出隐藏层合成的矩阵到Decoder中。 Decoder:有3点特别之处： 处理原句子的隐层状态时有两种做法： attentive read 和 selective read 。对应不同的机制，分别试图获取输入序列的语义信息和位置信息。selective reading是 隐状态更新：在状态更新公式中，额外加入selective reading的结果 预测输出: 输出有是个generate-mode和copy-mode的混合模型， generate-c，copy-mode就是从输入序列中选词 个人看法复现Github地址 在文本摘要任务能perform well ，不适合用于机器翻译 ， 在对话系统中表现一般 可以看作是attention的一种扩展。在attention的网络中都可以尝试加入这个copy mechanism","categories":[{"name":"NLP","slug":"NLP","permalink":"https://wizare.github.io/categories/NLP/"}],"tags":[{"name":"NLP","slug":"NLP","permalink":"https://wizare.github.io/tags/NLP/"},{"name":"论文阅读","slug":"论文阅读","permalink":"https://wizare.github.io/tags/论文阅读/"}]},{"title":"个人博客搭建教程","slug":"个人博客搭建教程","date":"2018-08-19T07:21:51.000Z","updated":"2018-08-19T12:02:26.462Z","comments":true,"path":"2018/08/19/个人博客搭建教程/","link":"","permalink":"https://wizare.github.io/2018/08/19/个人博客搭建教程/","excerpt":"","text":"本地环境搭建 安装 Node.js https://nodejs.org/en/ 安装 Git https://github.com/waylau/git-for-win 安装Hexo 1$ npm install -g hexo-cli 配置Github首先在github上面建一个仓库username.github.io，username是你github的用户名。此时访问 http://username.github.io/ ，就会访问到你创建的git的内容。 Hexo使用初始化Hexo1$ hexo init blog 配置部署1234deploy: type: git repo: ssh://git@github.com/username/username.github.io branch: master 发表文章1$ hexo new \"测试文章\" 清除缓存1$ hexo clean 生成静态页面1$ hexo g 启动服务预览1$ hexo s Hexo 美化使用Next主题的话，可以参考这个网站进行优化","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://wizare.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wizare.github.io/tags/Hexo/"},{"name":"Blog","slug":"Blog","permalink":"https://wizare.github.io/tags/Blog/"}]}]}